<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>zyuzhi</title>
		<description>随心</description>
		<link>/</link>
		<atom:link href="/" rel="self" type="application/rss+xml" />
		
			<item>
				<title>C#异常：throw，throw ex，throw new Exception(..)</title>
				<description>&lt;p&gt;最近看其他人写的C#代码，异常抛出的方式格式各样。总结了三种方式及其优劣：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;throw
    &lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nf&quot;&gt;do_something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;这种方式是将原先的异常再次抛出（rethrow），且不会重置异常的堆栈信息（在原先的堆栈信息上增加了当前的异常信息）。是最为推荐的异常抛出方式。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;throw new Exception(…)
    &lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nf&quot;&gt;do_something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;exception&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;这种异常抛出方式是将原先的异常经过包装后再抛出，将原先的异常放在新异常的内部异常堆栈中（&lt;code class=&quot;highlighter-rouge&quot;&gt;ex.InnerException&lt;/code&gt;）&lt;br /&gt;
PS: 下面异常抛出方式&lt;strong&gt;不要使用！！&lt;/strong&gt;，没有任何异常信息。&lt;/p&gt;
    &lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nf&quot;&gt;do_something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;exception&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;throw ex
    &lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nf&quot;&gt;do_something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;这种异常抛出方式重置了堆栈信息，&lt;strong&gt;不要使用！&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section&quot;&gt;测试&lt;/h2&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Diagnostics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Linq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ExceptionDemo&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ThrowException1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;throw&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;ProduceException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ThrowException2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;throw new Exception(\&quot;ProduceException\&quot;, ex)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;ProduceException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ProduceException&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ThrowException3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;throw new Exception(\&quot;ProduceException\&quot;)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;ProduceException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ProduceException&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ThrowException4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;throw ex&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;ProduceException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ProduceException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;funcList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;ThrowException1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;ThrowException2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;ThrowException3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;ThrowException4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;funcList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nf&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;结果&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;throw
System.DivideByZeroException: 尝试除以零。
   在 ExceptionDemo.Program.ProduceException() 位置 E:\ExceptionDemo\Program.cs:行号 68
   在 ExceptionDemo.Program.ThrowException1() 位置 E:\ExceptionDemo\Program.cs:行号 21
   在 ExceptionDemo.Program.Main(String[] args) 位置 E:\ExceptionDemo\Program.cs:行号 83


throw new Exception(&quot;ProduceException&quot;, ex)
System.Exception: ProduceException ---&amp;gt; System.DivideByZeroException: 尝试除以零。
   在 ExceptionDemo.Program.ProduceException() 位置 E:\ExceptionDemo\Program.cs:行号 68
   在 ExceptionDemo.Program.ThrowException2() 位置 E:\ExceptionDemo\Program.cs:行号 30
   --- 内部异常堆栈跟踪的结尾 ---
   在 ExceptionDemo.Program.ThrowException2() 位置 E:\ExceptionDemo\Program.cs:行号 34
   在 ExceptionDemo.Program.Main(String[] args) 位置 E:\ExceptionDemo\Program.cs:行号 83


throw new Exception(&quot;ProduceException&quot;)
System.Exception: ProduceException
   在 ExceptionDemo.Program.ThrowException3() 位置 E:\ExceptionDemo\Program.cs:行号 47
   在 ExceptionDemo.Program.Main(String[] args) 位置 E:\ExceptionDemo\Program.cs:行号 83


throw ex
System.DivideByZeroException: 尝试除以零。
   在 ExceptionDemo.Program.ThrowException4() 位置 E:\ExceptionDemo\Program.cs:行号 60
   在 ExceptionDemo.Program.Main(String[] args) 位置 E:\ExceptionDemo\Program.cs:行号 83
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-1&quot;&gt;结论&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;throw;&lt;/code&gt; good&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;throw new Exception(&quot;msg&quot;, ex);&lt;/code&gt; good&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;throw new Exception(&quot;msg&quot;);&lt;/code&gt; bad&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;throw ex;&lt;/code&gt; bad&lt;/li&gt;
&lt;/ol&gt;
</description>
				<pubDate>Thu, 29 Sep 2016 00:00:00 +0000</pubDate>
				<link>/blog/CSharp-Exception-Throw.html</link>
				<guid isPermaLink="true">/blog/CSharp-Exception-Throw.html</guid>
			</item>
		
			<item>
				<title>旋转矩阵、欧拉角、四元数和角轴</title>
				<description>&lt;p&gt;最近对三维空间的旋转表达方式做了整理。
三维空间中常用的表征旋转的方式有：
&lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Rotation_matrix&quot;&gt;旋转矩阵(rotation matrix)&lt;/a&gt;&lt;/strong&gt;、
&lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Euler_angles&quot;&gt;欧拉角(euler angles)&lt;/a&gt;&lt;/strong&gt;、
&lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation&quot;&gt;四元数(quaternion)&lt;/a&gt;&lt;/strong&gt;和
&lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Axis%E2%80%93angle_representation&quot;&gt;角轴(axis angle)&lt;/a&gt;&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;自己的一些理解：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;欧拉角中的 &lt;strong&gt;(x, y, z)&lt;/strong&gt;，&lt;strong&gt;(roll, pitch, yaw)&lt;/strong&gt;，&lt;strong&gt;(heading, elevation(attitude), bank)&lt;/strong&gt;是一回事，名称不同&lt;/li&gt;
  &lt;li&gt;四元数和角轴近似&lt;/li&gt;
  &lt;li&gt;角轴（&lt;strong&gt;Axis Angle&lt;/strong&gt;）和&lt;strong&gt;exponential twist&lt;/strong&gt;、罗德里格斯（&lt;strong&gt;Rodrigues&lt;/strong&gt;）旋转向量是一回事，叫法不同，公式上有微小不同&lt;/li&gt;
  &lt;li&gt;欧拉角、四元数和角轴是更符合人类思维的表达方式，这三种旋转方式都可以转换为旋转矩阵，旋转矩阵更利于计算机计算——将空间旋转（spatial rotation）变为矩阵运算。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;后文分享了欧拉角、四元数、角轴与旋转矩阵相互转换公式。数学原理和代码实现将会在后续的blog中Po出。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;相互转换&lt;/h2&gt;

&lt;p&gt;旋转矩阵：
$R=\begin{bmatrix}x_{11} &amp;amp; x_{12} &amp;amp; x_{13} \\ x_{21} &amp;amp; x_{22} &amp;amp; x_{23} \\ x_{31} &amp;amp; x_{32} &amp;amp; x_{33}\end{bmatrix}$，
欧拉角：
$\begin{bmatrix}\theta_x \\ \theta_y \\ \theta_z \end{bmatrix}$，
四元数：
$q=\begin{bmatrix}x \\ y \\ z \\ \omega \end{bmatrix}$，
角轴：
$r=\begin{pmatrix}\begin{bmatrix}k_x \\ k_y \\ k_z \end{bmatrix},&amp;amp; \theta\end{pmatrix}$&lt;/p&gt;

&lt;h3 id=&quot;longleftrightarrow&quot;&gt;欧拉角$\longleftrightarrow$旋转矩阵&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;欧拉角$\longrightarrow$旋转矩阵&lt;br /&gt;
绕$x$(&lt;em&gt;roll&lt;/em&gt;)、$y$(&lt;em&gt;pitch&lt;/em&gt;)、$z$(&lt;em&gt;yaw&lt;/em&gt;)轴分别旋转$\theta_x$、$\theta_y$、$\theta_z$的各旋转矩阵$R_x$、$R_y$、$R_z$
$$\left\lbrace\begin{aligned}R_x &amp;amp;=&amp;amp; \begin{bmatrix}1 &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; \cos\theta_x &amp;amp; -\sin\theta_x \\ 0 &amp;amp; \sin\theta_x &amp;amp; \cos\theta_x \end{bmatrix} \\ R_y &amp;amp;=&amp;amp; \begin{bmatrix} \cos\theta_y &amp;amp; 0 &amp;amp; \sin\theta_y \\ 0 &amp;amp; 1 &amp;amp; 0 \\ -\sin\theta_y &amp;amp; 0 &amp;amp; \cos\theta_y \end{bmatrix} \\ R_z &amp;amp;=&amp;amp; \begin{bmatrix} \cos\theta_z &amp;amp; -\sin\theta_z &amp;amp; 0 \\ \sin\theta_z &amp;amp; \cos\theta_z &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 1 \end{bmatrix}\end{aligned}\right.$$
则
$$\left\lbrace\begin{array}{cc}R=R_x \cdot R_y \cdot R_z &amp;amp; or \\ R=R_x \cdot R_z \cdot R_y &amp;amp; or \\ R=R_y \cdot R_x \cdot R_z &amp;amp; or \\ \vdots &amp;amp; \\ R=R_z \cdot R_y \cdot R_x &amp;amp; \end{array}\right.$$
通常是按照&lt;em&gt;roll&lt;/em&gt;$\rightarrow$&lt;em&gt;pitch&lt;/em&gt;$\rightarrow$&lt;em&gt;yaw&lt;/em&gt;的顺序进行旋转的，即
$$\begin{aligned}
&amp;amp; R &amp;amp;=&amp;amp; R_z \cdot R_y \cdot R_x \\ \\ &amp;amp; &amp;amp;=&amp;amp;\begin{bmatrix}
\cos\theta_z\cos\theta_y &amp;amp; \cos\theta_z\sin\theta_y\sin\theta_x-\sin\theta_z\cos\theta_x &amp;amp; \cos\theta_z\sin\theta_y\cos\theta_x+\sin\theta_z\sin\theta_x \\ 
\sin\theta_z\cos\theta_y &amp;amp; \sin\theta_z\sin\theta_y\sin\theta_x-\sin\theta_z\cos\theta_x &amp;amp; \sin\theta_z\sin\theta_y\cos\theta_x+\cos\theta_z\sin\theta_x \\ 
-\sin\theta_y &amp;amp; \cos\theta_y\sin\theta_x &amp;amp; \cos\theta_y\cos\theta_x 
\end{bmatrix}\end{aligned}$$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;旋转矩阵$\longrightarrow$欧拉角&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;longleftrightarrow-1&quot;&gt;角轴$\longleftrightarrow$旋转矩阵&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;角轴$\longrightarrow$旋转矩阵&lt;br /&gt;
绕转轴
$\left\lbrace\begin{aligned}&amp;amp;\vec{k}&amp;amp;=&amp;amp;\begin{bmatrix} k_x \\ k_y \\ k_z \end{bmatrix} \\ &amp;amp;||\vec{k}|| &amp;amp;=&amp;amp; 1\end{aligned}\right.$
按照右手定则旋转
$\theta$&lt;br /&gt;
有
$$K=\begin{bmatrix}0 &amp;amp; -k_z &amp;amp; k_y \\ k_z &amp;amp; 0 &amp;amp; -k_x \\ -k_y &amp;amp; k_x &amp;amp; 0 \end{bmatrix}$$
则旋转矩阵$R$为
$$\begin{aligned}&amp;amp; R &amp;amp;=&amp;amp; I+(\sin\theta)K+(1-\cos\theta)K^2 \\ &amp;amp; &amp;amp;=&amp;amp; \exp(\theta K) \end{aligned}$$
注：罗德里格斯旋转向量$\vec{r}=\theta\cdot\vec{k}$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;旋转矩阵$\longrightarrow$角轴&lt;br /&gt;
旋转矩阵
$$R=\begin{bmatrix}x_{11} &amp;amp; x_{12} &amp;amp; x_{13} \\ x_{21} &amp;amp; x_{22} &amp;amp; x_{23} \\ x_{31} &amp;amp; x_{32} &amp;amp; x_{33}\end{bmatrix}$$
 则角轴
$$\left\lbrace
\begin{aligned}
  &amp;amp;\theta &amp;amp;=&amp;amp; \cos^{-1}(\frac{x_{11}+x_{22}+x_{33}-1}{2})
\\ &amp;amp;\vec{k} &amp;amp;=&amp;amp; \begin{bmatrix}\frac{x_{32}-x_{23}}{m} \\\frac{x_{13}-x_{31}}{m} \\\frac{x_{21}-x_{12}}{m} \end{bmatrix}
\end{aligned}
\right.$$
其中
$$m=\sqrt{(x_{32}-x_{23})^2+(x_{13}-x_{31})^2+(x_{21}-x_{12})^2}$$&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;longleftrightarrow-2&quot;&gt;四元数$\longleftrightarrow$旋转矩阵&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;四元数$\longrightarrow$旋转矩阵&lt;br /&gt;
四元数$$q=\begin{bmatrix}x \\ y \\ z \\ \omega \end{bmatrix}$$
则旋转矩阵
$$\begin{aligned}
&amp;amp; R &amp;amp;=&amp;amp; I+2\cdot\begin{bmatrix}-y^2-z^2 &amp;amp; x\cdot y &amp;amp; x \cdot z \\ x \cdot y &amp;amp; -x^2-z^2 &amp;amp; y \cdot z \\ x \cdot z &amp;amp; y \cdot z &amp;amp; -x^2-y^2\end{bmatrix}+2\cdot\omega\cdot\begin{bmatrix}0 &amp;amp; -z &amp;amp; y \\ z &amp;amp; 0 &amp;amp; -x \\ -y &amp;amp; x &amp;amp; 0 \end{bmatrix} \\ \\ &amp;amp; &amp;amp;=&amp;amp; \begin{bmatrix}1-2y^2-2z^2 &amp;amp; 2xy-2z\omega &amp;amp; 2xz+2y\omega \\ 2xy+2z\omega &amp;amp; 1-2x^2-2z^2 &amp;amp; 2yz-2x\omega \\ 2xz-2y\omega &amp;amp; 2yz+2x\omega &amp;amp; 1-2x^2-2y^2\end{bmatrix}
\end{aligned}$$&lt;/li&gt;
  &lt;li&gt;旋转矩阵$\longrightarrow$四元数&lt;br /&gt;
旋转矩阵
$$R=\begin{bmatrix}x_{11} &amp;amp; x_{12} &amp;amp; x_{13} \\ x_{21} &amp;amp; x_{22} &amp;amp; x_{23} \\ x_{31} &amp;amp; x_{32} &amp;amp; x_{33}\end{bmatrix}$$
则四元数为
$$\left\lbrace\begin{aligned}&amp;amp;\omega &amp;amp;=&amp;amp; \frac{\sqrt{1+x_{11}+x_{22}+x_{33}}}{2} \\ &amp;amp;x &amp;amp;=&amp;amp; \frac{x_{32}-x_{23}}{4\omega} \\ \\ &amp;amp;y &amp;amp;=&amp;amp; \frac{x_{13}-x_{31}}{4\omega} \\ \\ &amp;amp;z &amp;amp;=&amp;amp; \frac{x_{21}-x_{12}}{4\omega}\end{aligned}\right.$$&lt;/li&gt;
&lt;/ol&gt;

</description>
				<pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate>
				<link>/blog/Matrix-Euler-AxisAngle-Quaternion.html</link>
				<guid isPermaLink="true">/blog/Matrix-Euler-AxisAngle-Quaternion.html</guid>
			</item>
		
	</channel>
</rss>
